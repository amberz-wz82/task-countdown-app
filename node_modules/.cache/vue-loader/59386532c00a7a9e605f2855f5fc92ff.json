{"remainingRequest":"/Users/amber/Desktop/info4340/wz82-hw1/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/amber/Desktop/info4340/wz82-hw1/src/components/ViewCountdown.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/amber/Desktop/info4340/wz82-hw1/src/components/ViewCountdown.vue","mtime":1632195940534},{"path":"/Users/amber/Desktop/info4340/wz82-hw1/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/amber/Desktop/info4340/wz82-hw1/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/amber/Desktop/info4340/wz82-hw1/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/amber/Desktop/info4340/wz82-hw1/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport moment from 'moment'\n\nexport default {\n  name: 'ViewCountdown',\n  data: function () {\n    return {\n      taskOutput: \"\",\n      countdownOutput: \"\",\n      collaboratorOutput: \"\",\n      deadlineOutput: \"\",\n      addNew: \"\",\n      hasTask: false\n    }\n  },\n  props: {\n    taskPassed: {\n      type: String\n    },\n    deadlinePassed: {\n      type: String\n    },\n    collaboratorPassed: {\n      type: Array\n    }\n  },\n\n  watch: {\n    taskPassed: function () {\n      // var timeStamp = moment().format('MMMM Do YYYY, h:mm:ss a')\n      this.taskOutput = this.taskPassed\n    },\n    \n    collaboratorPassed: function () {\n      this.collaboratorOutput = this.collaboratorPassed\n    },\n  },\n\n  methods: {\n    time () {\n      if (this.$props.deadlinePassed.length>0) {\n        this.deadlineOutput = moment(this.deadlinePassed).format(\"M/D/YYYY, dddd\")\n\n        var now = moment();\n        var end = moment(this.deadlinePassed);\n        var duration = moment.duration(end.diff(now));\n        this.countdownOutput = duration.days() + \" days \" + duration.hours() + \" hours \" + duration.minutes()  + \" minutes \" + duration.seconds() + \" seconds\";\n\n        this.addNew = \"\"\n\n        // document.getElementById(\"collab\").innerHTML = this.collaboratorOutput;\n        this.hasTask = true\n      }\n      else {\n        this.noTask()\n      }\n    },\n\n    noTask () {\n      if (this.$props.taskPassed.length<=0) {\n        this.addNew = \"No task is currently in display. Add a new task here!\"\n      }\n    }\n  },\n\n  mounted () {\n    this.interval = setInterval(this.time, 1000)\n  },\n  beforeDestroy () {\n    clearInterval(this.interval)\n  },\n}\n\n\n",{"version":3,"sources":["ViewCountdown.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAiBA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ViewCountdown.vue","sourceRoot":"src/components","sourcesContent":["<template>\n<div class=\"cboard\">\n  <div id='tableDiv'>\n    <h2 id=\"add-new\">{{this.addNew}}</h2>\n    <h2 id=\"task-name\">{{ this.taskOutput }}</h2>\n    <h2 id=\"due-text\" v-if=\"hasTask\">is due in...</h2>\n    <p id=\"countdown\" v-if=\"hasTask\">{{ this.countdownOutput }}</p>\n    <div id=\"ddl-collab-box\">\n      <p id=\"ddl\" v-if=\"hasTask\">Deadline: {{ this.deadlineOutput }}</p>\n      <p v-for=\"c in this.collaboratorOutput\" class=\"collab\" :key=\"c\">{{ c }}</p>\n    </div>\n\n  </div>\n</div>\n</template>\n\n<script>\nimport moment from 'moment'\n\nexport default {\n  name: 'ViewCountdown',\n  data: function () {\n    return {\n      taskOutput: \"\",\n      countdownOutput: \"\",\n      collaboratorOutput: \"\",\n      deadlineOutput: \"\",\n      addNew: \"\",\n      hasTask: false\n    }\n  },\n  props: {\n    taskPassed: {\n      type: String\n    },\n    deadlinePassed: {\n      type: String\n    },\n    collaboratorPassed: {\n      type: Array\n    }\n  },\n\n  watch: {\n    taskPassed: function () {\n      // var timeStamp = moment().format('MMMM Do YYYY, h:mm:ss a')\n      this.taskOutput = this.taskPassed\n    },\n    \n    collaboratorPassed: function () {\n      this.collaboratorOutput = this.collaboratorPassed\n    },\n  },\n\n  methods: {\n    time () {\n      if (this.$props.deadlinePassed.length>0) {\n        this.deadlineOutput = moment(this.deadlinePassed).format(\"M/D/YYYY, dddd\")\n\n        var now = moment();\n        var end = moment(this.deadlinePassed);\n        var duration = moment.duration(end.diff(now));\n        this.countdownOutput = duration.days() + \" days \" + duration.hours() + \" hours \" + duration.minutes()  + \" minutes \" + duration.seconds() + \" seconds\";\n\n        this.addNew = \"\"\n\n        // document.getElementById(\"collab\").innerHTML = this.collaboratorOutput;\n        this.hasTask = true\n      }\n      else {\n        this.noTask()\n      }\n    },\n\n    noTask () {\n      if (this.$props.taskPassed.length<=0) {\n        this.addNew = \"No task is currently in display. Add a new task here!\"\n      }\n    }\n  },\n\n  mounted () {\n    this.interval = setInterval(this.time, 1000)\n  },\n  beforeDestroy () {\n    clearInterval(this.interval)\n  },\n}\n\n\n</script>\n\n<style>\n  #outputTable {\n    margin-left: auto;\n    margin-right: auto;\n  }\n\n  table, th, td {\n    border: 0.5px solid black;\n    border-collapse: collapse;\n  }\n\n  th, td {\n    padding: 10px;\n    width: 300px;\n  }\n\n  body, html {\n    background-color: #bfdee8;\n    background: url(\"../../public/img/rock.svg\") bottom;\n    /* background-position: absolute; */\n    background-size:cover;\n    height: 98.95%;\n  }\n\n  #task-name {\n    font-size: 90px;\n    display: inline-block;\n    color: #2d4952;\n  }\n\n  #countdown {\n    font-size: 45px;\n    background-color: #a1c4d0;\n    box-shadow: 3px 3px 10px #7598a4;\n    width: 80%;\n    padding: 10px;\n    border-radius: 10px;\n    margin-left: auto;\n    margin-right: auto;\n  }\n\n  .collab {\n    /* border: 2px solid #000000; */\n    font-size: 20px;\n    display: inline-block;\n    margin: 0 5px;\n    background-color: #8aaeba;\n    padding: 3px 8px 2px 8px;\n    border-radius: 6px;\n    box-shadow: 3px 3px 5px #7598a4;\n  }\n\n  #due-text {\n    color: #78888c;\n    display: inline-block;\n    margin-left: 15px;\n  }\n\n  #ddl-collab-box {\n    margin-top: 50px;\n  }\n\n  #ddl {\n    font-size: 20px;\n    color: #2d4952;\n  }\n\n</style>\n"]}]}